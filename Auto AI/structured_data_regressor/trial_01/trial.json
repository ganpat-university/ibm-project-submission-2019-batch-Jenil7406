{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Boolean", "config": {"name": "structured_data_block_1/normalize", "default": false, "conditions": []}}, {"class_name": "Boolean", "config": {"name": "structured_data_block_1/dense_block_1/use_batchnorm", "default": false, "conditions": []}}, {"class_name": "Choice", "config": {"name": "structured_data_block_1/dense_block_1/num_layers", "default": 2, "conditions": [], "values": [1, 2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "structured_data_block_1/dense_block_1/units_0", "default": 32, "conditions": [], "values": [16, 32, 64, 128, 256, 512, 1024], "ordered": true}}, {"class_name": "Choice", "config": {"name": "structured_data_block_1/dense_block_1/dropout", "default": 0.0, "conditions": [], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "structured_data_block_1/dense_block_1/units_1", "default": 32, "conditions": [], "values": [16, 32, 64, 128, 256, 512, 1024], "ordered": true}}, {"class_name": "Choice", "config": {"name": "regression_head_1/dropout", "default": 0, "conditions": [], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd", "adam_weight_decay"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.1, 0.01, 0.001, 0.0001, 2e-05, 1e-05], "ordered": true}}], "values": {"structured_data_block_1/normalize": true, "structured_data_block_1/dense_block_1/use_batchnorm": false, "structured_data_block_1/dense_block_1/num_layers": 1, "structured_data_block_1/dense_block_1/units_0": 256, "structured_data_block_1/dense_block_1/dropout": 0.5, "structured_data_block_1/dense_block_1/units_1": 32, "regression_head_1/dropout": 0.0, "optimizer": "adam", "learning_rate": 0.001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\engine\\tuner.py\", line 101, in _build_and_fit_model\n    _, history = utils.fit_with_adaptive_batch_size(\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 88, in fit_with_adaptive_batch_size\n    history = run_with_adaptive_batch_size(\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 101, in run_with_adaptive_batch_size\n    history = func(x=x, validation_data=validation_data, **fit_kwargs)\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 89, in <lambda>\n    batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 54, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.UnimplementedError: Graph execution error:\n\nDetected at node 'mean_absolute_error/Cast' defined at (most recent call last):\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\threading.py\", line 937, in _bootstrap\n      self._bootstrap_inner()\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\threading.py\", line 980, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\threading.py\", line 917, in run\n      self._target(*self._args, **self._kwargs)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 299, in _run_script_thread\n      self._run_script(request.rerun_data)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 565, in _run_script\n      exec(code, module.__dict__)\n    File \"D:\\Ashil\\Projects\\IBM\\Auto AI\\app_structure.py\", line 287, in <module>\n      search.fit(x=X_train, y=y_train)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\tasks\\structured_data.py\", line 139, in fit\n      history = super().fit(\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\auto_model.py\", line 292, in fit\n      history = self.tuner.search(\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\engine\\tuner.py\", line 193, in search\n      super().search(\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 230, in search\n      self._try_run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n      self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 235, in _run_and_update_trial\n      results = self.run_trial(trial, *fit_args, **fit_kwargs)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n      obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\engine\\tuner.py\", line 101, in _build_and_fit_model\n      _, history = utils.fit_with_adaptive_batch_size(\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 88, in fit_with_adaptive_batch_size\n      history = run_with_adaptive_batch_size(\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 101, in run_with_adaptive_batch_size\n      history = func(x=x, validation_data=validation_data, **fit_kwargs)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 89, in <lambda>\n      batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1564, in fit\n      tmp_logs = self.train_function(iterator)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1160, in train_function\n      return step_function(self, iterator)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1146, in step_function\n      outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1135, in run_step\n      outputs = model.train_step(data)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 994, in train_step\n      loss = self.compute_loss(x, y, y_pred, sample_weight)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1052, in compute_loss\n      return self.compiled_loss(\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\engine\\compile_utils.py\", line 265, in __call__\n      loss_value = loss_obj(y_t, y_p, sample_weight=sw)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\losses.py\", line 152, in __call__\n      losses = call_fn(y_true, y_pred)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\losses.py\", line 272, in call\n      return ag_fn(y_true, y_pred, **self._fn_kwargs)\n    File \"C:\\Users\\Admin\\anaconda3\\lib\\site-packages\\keras\\losses.py\", line 1626, in mean_absolute_error\n      y_true = tf.cast(y_true, y_pred.dtype)\nNode: 'mean_absolute_error/Cast'\nCast string to float is not supported\n\t [[{{node mean_absolute_error/Cast}}]] [Op:__inference_train_function_2801]\n"}